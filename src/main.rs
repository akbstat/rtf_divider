use std::path::Path;

use anyhow::{Ok, Result};
use clap::Parser;

use rtf_divider::RTFDivider;

fn main() -> Result<()> {
    let args = Args::parse();
    let divider = if let Some(d) = RTFDivider::new(Path::new(&args.target))? {
        d
    } else {
        println!(
            "INFO: file [{:?}] is not generated by SAS MACRO report5, skip",
            args.target
        );
        return Ok(());
    };

    divider
        .set_pagesize(args.pagesize)
        .divide(Path::new(&args.dest))?;
    Ok(())
}

#[derive(Parser, Debug)]
#[command(author, version, about)]
struct Args {
    #[arg(short, long)]
    target: String,
    #[arg(short, long, default_value_t = 10)]
    pagesize: usize,
    #[arg(short, long)]
    dest: String,
}
